name: Destroy Infrastructure

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Environment to destroy"
        required: true
        default: "staging"
        type: choice
        options:
          - staging
      confirm_destroy:
        description: 'Type "destroy" to confirm'
        required: true

jobs:
  destroy:
    runs-on: ubuntu-latest
    if: github.event.inputs.confirm_destroy == 'destroy'
    env:
      TF_WORKSPACE: ${{ github.event.inputs.environment }}
      AWS_REGION: us-east-2

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: "1.7.0"

      - name: Verify State Resources
        working-directory: devops/terraform/00-state
        run: |
          echo "üîç Checking state resources..."
          aws s3 ls s3://vanillatstodo-terraform-state --recursive || true
          aws dynamodb describe-table --table-name vanillatstodo-terraform-state-lock || true

      - name: Destroy Infrastructure
        working-directory: devops/terraform/00-state
        run: |
          # Remove prevent_destroy temporarily
          sed -i 's/prevent_destroy = true/prevent_destroy = false/' state_manager.tf

          # Initialize Terraform
          terraform init \
            -backend-config="bucket=vanillatstodo-terraform-state" \
            -backend-config="key=staging/terraform.tfstate" \
            -backend-config="region=us-east-2" \
            -backend-config="dynamodb_table=vanillatstodo-terraform-state-lock"

          # Destroy resources
          terraform destroy -auto-approve

      - name: Verify Destruction
        if: success()
        run: |
          echo "üîç Verifying resource deletion..."
          aws s3 ls s3://vanillatstodo-terraform-state || echo "‚úÖ S3 bucket deleted"
          aws dynamodb describe-table --table-name vanillatstodo-terraform-state-lock || echo "‚úÖ DynamoDB table deleted"
